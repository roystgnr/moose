[Tests]
  [poly2tri]
    design = 'meshgenerators/Poly2TriMeshGenerator.md'
    issues = '#20192'
    requirement = "The system shall have the capability of triangulating a polyline boundary"

    [basic]
      type = 'Exodiff'
      input = 'poly2tri_mesh_generator.i'
      cli_args = '--mesh-only'
      exodiff = 'poly2tri_mesh_generator_in.e'
      recover = false
      detail = "within an input polyline"
    []
    [with_holes]
      type = 'Exodiff'
      input = 'poly2tri_with_holes.i'
      cli_args = '--mesh-only'
      exodiff = 'poly2tri_with_holes_in.e'
      recover = false
      detail = "respecting any specified interior 'hole' meshes"
    []
    [stitching]
      type = 'Exodiff'
      input = 'poly2tri_stitching.i'
      cli_args = '--mesh-only'
      exodiff = 'poly2tri_stitching_in.e'
      recover = false
      detail = "which can be selectively stitched into the final mesh"
    []
    [nested]
      type = 'Exodiff'
      input = 'poly2tri_nested.i'
      cli_args = '--mesh-only'
      exodiff = 'poly2tri_nested_in.e'
      recover = false
      detail = "allowing deep nesting of triangulations within triangulations"
    []
    [smoothed]
      type = 'Exodiff'
      input = 'poly2tri_smoothed.i'
      cli_args = '--mesh-only'
      exodiff = 'poly2tri_smoothed_in.e'
      recover = false
      detail = "with optional Laplacian mesh smoothing."
    []
  []
[]
